// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SecondDimensionWatcherReDive.Models;

#nullable disable

namespace SecondDimensionWatcherReDive.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SecondDimensionWatcherReDive.Models.Animation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TmdbId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Animations");
                });

            modelBuilder.Entity("SecondDimensionWatcherReDive.Models.AnimationGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AnimationGroups");
                });

            modelBuilder.Entity("SecondDimensionWatcherReDive.Models.AnimationInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AdditionalDownloadInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("AnimationId")
                        .HasColumnType("uuid");

                    b.Property<byte[]>("CachedDownloadData")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DownloadEndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DownloadStartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DownloadType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DownloadUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileStore")
                        .HasColumnType("text");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDownloadFinished")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDownloadTracked")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("PublishTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StorePath")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AnimationId");

                    b.HasIndex("GroupId");

                    b.ToTable("AnimationInfo");
                });

            modelBuilder.Entity("SecondDimensionWatcherReDive.Models.AnimationInfo", b =>
                {
                    b.HasOne("SecondDimensionWatcherReDive.Models.Animation", "Animation")
                        .WithMany()
                        .HasForeignKey("AnimationId");

                    b.HasOne("SecondDimensionWatcherReDive.Models.AnimationGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("Animation");

                    b.Navigation("Group");
                });
#pragma warning restore 612, 618
        }
    }
}
